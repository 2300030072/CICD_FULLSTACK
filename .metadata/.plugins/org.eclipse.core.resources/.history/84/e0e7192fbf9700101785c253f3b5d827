package com.klef.dev.Services;

import org.springframework.stereotype.Service;
import com.klef.dev.Entity.User;
import com.klef.dev.Repository.UserRepository;
import java.util.Optional;

@Service
public class UserService {
    private final UserRepository userRepository;

    public UserService(UserRepository userRepository) {
        this.userRepository = userRepository;
    }

    // Register user with email uniqueness check
    public User register(User user) {
        Optional<User> existingUser = userRepository.findByEmail(user.getEmail());
        if (existingUser.isPresent()) {
            throw new RuntimeException("Email already registered!");
        }
        return userRepository.save(user);
    }

    // Login user
    public Optional<User> login(String email, String password) {
        return userRepository.findByEmail(email)
                .filter(u -> u.getPassword().equals(password));
    }

    // Update profile
    public User updateProfile(User user) {
        return userRepository.save(user);
    }
}
